swagger: "2.0"
info:
  title: CIE-Restaurant api
  # description: backend e-commerce api
  version: 1.0
  servers:
    -url: http://localhost:3000/
    -description: local server
# schemes: [http,https]

paths:
#user
  /user:
    get:
      tags:
        - "user"
      summary: get all user
      responses:
        200:
          description: success
  /user/register:
    post:
      tags:
        - "user"
      summary: add user
      produces:
        - application/json
      consumes: 
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: ok
  /user/{id}:
    get:
      tags:
        - "user"
      summary: signle user
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
    delete:
      tags:
        - "user"
      summary: delete user
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
    put:
      tags:
        - "user"
      summary: update user
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: body
        name: user
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "success"

  /meal:
    get:
      tags:
        - "meal"
      summary: get all meals
      responses:
        200:
          description: success
    post:
      tags:
        - "meal"
      summary: add meal
      produces:
        - application/json
      consumes: 
        - application/json
      parameters:
        - in: body
          name: meal
          schema:
            $ref: "#/definitions/Meal"
      responses:
        200:
          description: ok
  /meal/{id}:
    get:
      tags:
        - "meal"
      summary: signle meal
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
    delete:
      tags:
        - "meal"
      summary: delete meal
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
    put:
      tags:
        - "meal"
      summary: update meal
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: body
        name: meal
        schema:
          $ref: "#/definitions/Meal"
      responses:
        "200":
          description: "success"
  
  /order:
    get:
      tags:
        - "order"
      summary: get all order
      responses:
        200:
          description: success
    post:
      tags:
        - "order"
      summary: add order
      produces:
        - application/json
      consumes: 
        - application/json
      parameters:
        - in: body
          name: order
          schema:
            $ref: "#/definitions/Order"
      responses:
        200:
          description: ok
  /order/{id}:
    get:
      tags:
        - "order"
      summary: signle order
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
    delete:
      tags:
        - "order"
      summary: delete order
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
    put:
      tags:
        - "order"
      summary: update order
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: body
        name: order
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "success"


definitions:
  User:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone: 
        type: "string"
  Meal:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      price:
        type: "string"

  Order:
    type: "object"
    properties:
      meals:
        type: array
        items:
          type: string
          # properties:
          #   id:
          #     type: "string"
      address:
        type: "string"
      phone:
        type: "string"
      status:
        type: "string"
      user:
        type: "string"